{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\projects\\\\gregjwild\\\\pages\\\\blog.js\",\n    _this = this;\n\nimport Layout from \"../components/Layout\";\nimport PostList from '../components/PostList';\n\n/* Here's what we're rendering in the index */\nvar Blog = function Blog(_ref) {\n  var posts = _ref.posts,\n      title = _ref.title,\n      description = _ref.description,\n      props = _objectWithoutProperties(_ref, [\"posts\", \"title\", \"description\"]);\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    pageTitle: title,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"The Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(PostList, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Blog;\nexport var __N_SSG = true;\nexport default Blog;\n/* \r\nThis is a Next function: it fetches data, and returns it as props to the page component.\r\n\r\nWe're getting data from the siteconfig.json file.\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["E:/projects/gregjwild/pages/blog.js"],"names":["Layout","PostList","Blog","posts","title","description","props"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAGA;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA6C;AAAA,MAA1CC,KAA0C,QAA1CA,KAA0C;AAAA,MAAnCC,KAAmC,QAAnCA,KAAmC;AAAA,MAA5BC,WAA4B,QAA5BA,WAA4B;AAAA,MAAZC,KAAY;;AACxD,sBACE,QAAC,MAAD;AAAQ,IAAA,SAAS,EAAEF,KAAnB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAED;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CATD;;KAAMD,I;;AAWN,eAAeA,IAAf;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import Layout from \"../components/Layout\";\r\nimport PostList from '../components/PostList';\r\nimport matter from 'gray-matter';\r\n\r\n/* Here's what we're rendering in the index */\r\nconst Blog = ({ posts, title, description, ...props }) => {\r\n  return (\r\n    <Layout pageTitle={title}>\r\n      <h1 className=\"title\">The Blog</h1>\r\n      <main>\r\n        <PostList posts={posts}/>\r\n      </main>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n\r\n/* \r\nThis is a Next function: it fetches data, and returns it as props to the page component.\r\n\r\nWe're getting data from the siteconfig.json file.\r\n*/\r\nexport async function getStaticProps() {\r\n  // Site Info\r\n  const configData = await import(`../siteconfig.json`)\r\n\r\n  // Posts\r\n  const postsRaw = ((context) => {\r\n    const keys = context.keys()\r\n    const values = keys.map(context)\r\n\r\n    const data = keys.map((key, index) => {\r\n      let slug = key.replace(/^.*[\\\\\\/]/, '').slice(0, -3)\r\n      const value = values[index];\r\n      const document = matter(value.default)\r\n      return {\r\n        frontmatter:document.data,\r\n        markdownBody: document.content,\r\n        slug\r\n      }\r\n    })\r\n    return data;\r\n\r\n  })(require.context('./posts', true, /\\.md$/)); \r\n\r\n  // Convert posts to dates \r\n  const postsWithDatesConverted = postsRaw => {\r\n      return postsRaw.map(post => {\r\n          post.frontmatter.date = new Date(post.frontmatter.date);\r\n          return post;\r\n      });\r\n  }\r\n\r\n\r\n  // Sort dates\r\n  const postsSorted = postsWithDatesConverted(postsRaw).slice().sort((a, b) => a.frontmatter.date - b.frontmatter.date).reverse()\r\n\r\n  // Convert dates to strings (as we need our function to return JSON);\r\n  const cleanPosts = postsSorted => {\r\n    return postsSorted.map(post => {\r\n      post.frontmatter.date = post.frontmatter.date.toISOString().slice(0,10)\r\n      return post\r\n    })\r\n  }\r\n\r\n  const posts = cleanPosts();\r\n  \r\n  console.log(posts)\r\n\r\n  return {\r\n    props: {\r\n      posts,\r\n      title: configData.default.title,\r\n      description: configData.default.description,\r\n    },\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}