{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\projects\\\\gregjwild\\\\pages\\\\index.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport Layout from \"../components/Layout\";\n/* Here's what we're rendering in the index */\n\nconst Index = (_ref) => {\n  let {\n    posts,\n    title,\n    description\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"posts\", \"title\", \"description\"]);\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    pageTitle: title,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Welcome to my blog!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"description\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"TODO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Index;\n/* \nThis is a Next function: it fetches data, and returns it as props to the page component.\n\nWe're getting data from the siteconfig.json file.\n*/\n\nexport async function getStaticProps() {\n  require.context('./posts', true, /\\.md$/);\n\n  return {\n    props: {\n      posts,\n      title: configData.default.title,\n      description: configData.default.description\n    }\n  };\n}","map":{"version":3,"sources":["E:/projects/gregjwild/pages/index.js"],"names":["Layout","Index","posts","title","description","props","getStaticProps","require","context","configData","default"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AAEA;;AACA,MAAMC,KAAK,GAAG,UAA6C;AAAA,MAA5C;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,GAA4C;AAAA,MAAZC,KAAY;;AACzD,sBACE,QAAC,MAAD;AAAQ,IAAA,SAAS,EAAEF,KAAnB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA,gBACGC;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAZD;;AAcA,eAAeH,KAAf;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,eAAeK,cAAf,GAAgC;AACtCC,EAAAA,OAAO,CAACC,OAAR,CAAgB,SAAhB,EAA2B,IAA3B,EAAiC,OAAjC,CAAD;;AAEE,SAAO;AACLH,IAAAA,KAAK,EAAE;AACLH,MAAAA,KADK;AAELC,MAAAA,KAAK,EAAEM,UAAU,CAACC,OAAX,CAAmBP,KAFrB;AAGLC,MAAAA,WAAW,EAAEK,UAAU,CAACC,OAAX,CAAmBN;AAH3B;AADF,GAAP;AAOD","sourcesContent":["import Layout from \"../components/Layout\";\n\n/* Here's what we're rendering in the index */\nconst Index = ({ posts, title, description, ...props }) => {\n  return (\n    <Layout pageTitle={title}>\n      <h1 className=\"title\">Welcome to my blog!</h1>\n      <p className=\"description\">\n        {description}\n      </p>\n      <main>\n        <p>TODO</p>\n      </main>\n    </Layout>\n  )\n}\n\nexport default Index\n\n/* \nThis is a Next function: it fetches data, and returns it as props to the page component.\n\nWe're getting data from the siteconfig.json file.\n*/\nexport async function getStaticProps() {\n(require.context('./posts', true, /\\.md$/)); \n\n  return {\n    props: {\n      posts,\n      title: configData.default.title,\n      description: configData.default.description,\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}